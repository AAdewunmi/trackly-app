
# ========= CI profile (Postgres service in GitHub Actions) =========
spring.application.name=Trackly-App

spring.datasource.url=jdbc:postgresql://localhost:5433/trackly
spring.datasource.username=trackly
spring.datasource.password=change-me
spring.datasource.driver-class-name=org.postgresql.Driver

# Schema management (pick ONE of these approaches)
# A) Use JPA to create/update schema in CI tests:
spring.jpa.hibernate.ddl-auto=update

# If you use Flyway migrations instead, enable this and set ddl-auto=validate:
# spring.flyway.enabled=true
# spring.jpa.hibernate.ddl-auto=validate

spring.jpa.show-sql=false
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.jdbc.time_zone=UTC
# Dialect is auto-detected, but explicitly OK:
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect

# Make sure SQL init is off (we're not loading schema.sql/data.sql in CI)
spring.sql.init.mode=never

# Enable role seeding in CI
spring.profiles.include=ci

# Test timeout settings
spring.test.database.replace=none